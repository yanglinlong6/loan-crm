<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.daofen.admin.service.user.dao.UserDao">
	<resultMap id="BaseResultMap" type="com.daofen.admin.service.user.model.UserPO">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" property="name" />
		<result column="username" property="username" />
		<result column="password" property="password" />
		<result column="create_by" property="createBy" />
		<result column="create_date" property="createDate" />
		<result column="update_by" property="updateBy" />
		<result column="update_date" property="updateDate" />
	</resultMap>
	<!-- , create_by, create_date, update_by, update_date -->
	<sql id="Base_Column_List">
		id,`name`,username,password,create_by,create_date,update_by,update_date
	</sql>
	<insert id="saveUser">
		insert into daofen_admin.`user`
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null and name !=''">
				name,
			</if>
			<if test="username != null and username !=''">
				username,
			</if>
			<if test="password != null and password !=''">
				password,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createDate != null">
				create_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null and name !=''">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="username != null and username !=''">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null and password !=''">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="createDate != null">
				#{createDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateUser">
		update daofen_admin.`user`
		<set>
			<if test="name != null and name !=''">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="username != null and username !=''">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="resetPassword">
		update daofen_admin.`user`
		<set>
			<if test="password != null and password !=''">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
			<if test="updateDate != null">
				update_date = #{updateDate,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<delete id="deleteUser">
		delete
		from daofen_admin.`user`
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<select id="selectUserByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from daofen_admin.`user`
		where username=#{username}
	</select>
	<select id="selectUserListCountByPage" resultType="java.lang.Integer">
		select count(1)
		from daofen_admin.`user`
		<where>
			<if test="param != null">
				<if test="param.username !=null and param.username!=''">
					and username like concat('%', #{param.username},'%')
				</if>
			</if>
		</where>
	</select>
	<select id="selectUserListByPage" resultMap="BaseResultMap">
		select
		id,`name`,username,create_by,create_date,update_by,update_date
		from daofen_admin.`user`
		<where>
			<if test="param != null">
				<if test="param.username !=null and param.username!=''">
					and username like concat('%', #{param.username},'%')
				</if>
			</if>
		</where>
		limit #{startIndex},#{size}
	</select>
	<select id="findOneUser" resultMap="BaseResultMap">
		select id,
		`name`,
		username,
		create_by,
		create_date,
		update_by,
		update_date
		from daofen_admin.`user`
		where id = #{id,jdbcType=BIGINT}
	</select>
	<!-- getHandOutUserList -->
	<select id="getHandOutUserList" resultType="com.daofen.admin.service.user.model.HandOutUserPO">
		SELECT
		ua.id AS uid ,
		ua.name AS username,
		ua.mobile  ,
		ua.	city ,
		ua.loan_amount AS loanAmount,
		ua.create_date AS createDate,
		ua.update_date AS updateDate,
		odr.dispatch_status AS dispatchStatus,
		odr.dispatch_result AS dispatchResult,
		o.org_name AS orgName
		FROM
		user_aptitude ua
		LEFT JOIN org_dispatche_rec odr ON
		odr.customer_id = ua.id
		LEFT JOIN org o ON
		o.org_id = odr.org_id
		<where>
			<if test="param != null">
				<if test="param.username !=null and param.username!=''">
					and ua.name like concat('%', #{param.username},'%')
				</if>
				<if test="param.mobile !=null and param.mobile!=''">
					and ua.mobile like concat('%', #{param.mobile},'%')
				</if>
				<if test="param.dispatchStatus !=null">
					and odr.dispatch_status = #{param.dispatchStatus}
				</if>
				<if test="param.orgName !=null and param.orgName!=''">
					and o.org_name like concat('%', #{param.orgName},'%')
				</if>
			</if>
		</where>
		order by odr.id desc
		limit #{startIndex},#{size}
	</select>
	<!-- getHandOutUserListCountByPage -->
	<select id="getHandOutUserListCountByPage" resultType="java.lang.Integer">
		SELECT
		count(1)
		FROM
		user_aptitude ua
		LEFT JOIN org_dispatche_rec odr ON
		odr.customer_id = ua.id
		LEFT JOIN org o ON
		o.org_id = odr.org_id
		<where>
			<if test="param != null">
				<if test="param.username !=null and param.username!=''">
					and ua.name like concat('%', #{param.username},'%')
				</if>
				<if test="param.mobile !=null and param.mobile!=''">
					and ua.mobile like concat('%', #{param.mobile},'%')
				</if>
				<if test="param.dispatchStatus !=null">
					and odr.dispatch_status = #{param.dispatchStatus}
				</if>
				<if test="param.orgName !=null and param.orgName!=''">
					and o.org_name like concat('%', #{param.orgName},'%')
				</if>
			</if>
		</where>
	</select>
	<!-- getDayStatisticsList -->
	<select id="getDayStatisticsList" resultType="com.daofen.admin.service.user.model.DayStatisticsPO">
		SELECT LEFT(create_date,10) AS `day`,count(1) AS num FROM user_aptitude
		WHERE LEFT(create_date,10) >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
		group by LEFT(create_date,10);
	</select>
	<!-- getTimeStatisticsList -->
	<select id="getTimeStatisticsList" resultType="com.daofen.admin.service.user.model.TimeStatisticsPO">
		SELECT DATE_FORMAT(create_date,'%H') AS hour, count(1) AS num
		FROM user_aptitude WHERE LEFT(create_date,10) = LEFT(sysdate() ,10)
		group by DATE_FORMAT(create_date,'%H');
	</select>
	<!-- getDayHandOutStatisticsList -->
	<select id="getDayHandOutStatisticsList" resultType="com.daofen.admin.service.user.model.DayStatisticsPO">
		SELECT LEFT(update_date,10) AS `day`,count(1) AS num FROM user_aptitude
		WHERE LEFT(update_date,10) >= DATE_SUB(NOW(), INTERVAL 1 MONTH)
		group by LEFT(update_date,10);
	</select>
	<!-- getTimeHandOutStatisticsList -->
	<select id="getTimeHandOutStatisticsList" resultType="com.daofen.admin.service.user.model.TimeStatisticsPO">
		SELECT DATE_FORMAT(update_date,'%H') AS hour, count(1) AS num
		FROM user_aptitude WHERE LEFT(update_date,10) = LEFT(sysdate() ,10)
		group by DATE_FORMAT(update_date,'%H');
	</select>
</mapper>
